allprojects {
    apply plugin: 'maven'
    group = 'de.bootcamp.wicket'
    version = '1.0.0-SNAPSHOT'
}

def junit_version = '4.11'
def hamcrest_version = '1.3'
def mockito_version = '1.9.5'
def jpa20_version = '1.0.1.Final'
def querydsl_version = '2.9.0'
def spring_version = '3.2.3.RELEASE'
def spring_data_version = '1.3.1.RELEASE'
def hibernate_version = '4.1.9.Final'
def commons_codec_version = '1.7'
def h2_version = '1.3.170'
def wicket_version = '6.7.0'
def slf4j_log4j_version = '1.7.2'
def log4j_version = '1.2.17'
def lambdaj_version = '2.3.3'
def commons_lang_version = '3.1'
def joda_time_version = '2.2'

subprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    repositories {
        mavenCentral()
        mavenLocal()
        mavenRepo url: "https://repository.apache.org/content/repositories/snapshots/"
        mavenRepo url: "http://source.mysema.com/maven2/releases/"
        mavenRepo url: "http://repo.maven.apache.org/maven2"
    }

    configurations {
        all*.exclude module: 'commons-logging'
    }

    ext.libs = [
            spring_web: dependencies.create("org.springframework:spring-web:${spring_version}"),
            spring_orm: dependencies.create("org.springframework:spring-orm:${spring_version}"),
            spring_context: dependencies.create("org.springframework:spring-context:${spring_version}"),
            spring_tx: dependencies.create("org.springframework:spring-tx:${spring_version}"),
            spring_core: dependencies.create("org.springframework:spring-core:${spring_version}"),
            spring_aspects: dependencies.create("org.springframework:spring-aspects:${spring_version}"),
            jpa20: "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:${jpa20_version}",
            hibernate_entitymanager: "org.hibernate:hibernate-entitymanager:${hibernate_version}",
            querydsl: dependencies.create("com.mysema.querydsl:querydsl-jpa:${querydsl_version}") {
                exclude(module: 'jsr305')
            },
            querydsl_apt: dependencies.create("com.mysema.querydsl:querydsl-apt:${querydsl_version}") {
                exclude(module: 'jsr305')
                force = true
            },
            commons_codec: "commons-codec:commons-codec:${commons_codec_version}",
            spring_data_jpa: dependencies.create("org.springframework.data:spring-data-jpa:${spring_data_version}") {
                exclude(module: 'spring-beans')
                exclude(module: 'spring-context')
                exclude(module: 'spring-aop')
            },
            c3p0: "org.hibernate:hibernate-c3p0:${hibernate_version}",
            h2: "com.h2database:h2:${h2_version}",
            wicket_core: "org.apache.wicket:wicket-core:${wicket_version}",
            wicket_extensions: "org.apache.wicket:wicket-extensions:${wicket_version}",
            wicket_core: "org.apache.wicket:wicket-core:${wicket_version}",
            wicket_auth_roles: "org.apache.wicket:wicket-auth-roles:${wicket_version}",
            slf4j_log4j: "org.slf4j:slf4j-log4j12:${slf4j_log4j_version}",
            log4j: "log4j:log4j:${log4j_version}",
            lambdaj: "com.googlecode.lambdaj:lambdaj:${lambdaj_version}",
            commons_lang: "org.apache.commons:commons-lang3:${commons_lang_version}",
            joda_time: "joda-time:joda-time:${joda_time_version}"
    ]

    ext.test_libs = [
            wicket_spring: "org.apache.wicket:wicket-spring:${wicket_version}",
            hamcrest: "org.hamcrest:hamcrest-all:${hamcrest_version}",
            mockito: "org.mockito:mockito-all:${mockito_version}",
            junit: "junit:junit:${junit_version}",
            spring_test: "org.springframework:spring-test:${spring_version}"
    ]
}
